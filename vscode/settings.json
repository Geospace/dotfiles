{
  // ---------------------------------------------------------------------------
  // Found this font order in a tutorial, may not be necessary
  "workbench.colorTheme": "Calamity",
  "editor.fontFamily": "PragmataPro, Consolas, 'Courier New', monospace",
  "editor.fontWeight": "400", // Normal
  "editor.fontSize": 17,
  "editor.fontLigatures": true,
  "editor.tabSize": 2,
  "editor.rulers": [
    80,
    120
  ],
  "editor.suggestSelection": "first",
  "editor.renderLineHighlight": "all",
  "editor.lightbulb.enabled": false,
  "editor.scrollbar.horizontal": "hidden",
  // ---------------------------------------------------------------------------
  "terminal.integrated.fontSize": 18,
  // ---------------------------------------------------------------------------
  "extensions.ignoreRecommendations": false, // No extensions recommendations
  // ---------------------------------------------------------------------------
  "window.title": "${activeEditorShort}",
  "window.titleBarStyle": "native",
  // ---------------------------------------------------------------------------
  "editor.detectIndentation": false, // Do not adapt to opened file indentation settings
  "[python]": {
    "editor.tabSize": 4, // 4 spaces in Python to respect PEP8
    "files.insertFinalNewline": true, // Empty line at end of file
  },
  "[typescriptreact]": {
    "files.insertFinalNewline": true, // Empty line at end of file
  },
  // ---------------------------------------------------------------------------
  "breadcrumbs.enabled": false, // The vertical bar on the left
  "workbench.startupEditor": "newUntitledFile", // Hide menu
  "workbench.editor.enablePreview": false, // Disable the preview on single click and open the file right away
  "workbench.activityBar.visible": false,
  "workbench.colorCustomizations": {
    // Nuances can be generated with
    // https://superdevresources.com/tools/color-shades
    // "statusBar.background": "#333", // Status bar when a folder is open (code . for example)
    // "statusBar.noFolderBackground": "#333", // When no folder is open, I don't care so same color
    // "statusBar.debuggingBackground": "#333", // When in live debugging
    // "notificationCenter.border": "#aaa",
    // "notifications.border": "#aaa",
    // "notificationToast.border": "#aaa",
    // "notifications.background": "#1a1a1a",
  },
  // ---------------------------------------------------------------------------
  "explorer.openEditors.visible": 0,
  "window.zoomLevel": 0,
  // ---------------------------------------------------------------------------
  "vim.hlsearch": true,
  "vim.leader": "<space>",
  "vim.useSystemClipboard": true,
  "vim.incsearch": true,
  "vim.sneak": true,
  "vim.sneakUseIgnorecaseAndSmartcase": true,
  "vim.normalModeKeyBindings": [
    // {
    //   // Previous tab
    //   "before": [ "<C-h>" ],
    //   "commands": [ "workbench.action.previousEditor" ]
    // },
    // {
    //   // Next tab
    //   "before": [ "<C-l>" ],
    //   "commands": [ "workbench.action.nextEditor" ]
    // },
    {
      // Remove highlight after search
      "before": [ "q", "q" ],
      "commands": [ ":nohl" ]
    },
    {
      // Search panel
      "before": [ "<leader>", "f" ],
      "commands": [ "workbench.view.search" ]
    }
  ],
  "vim.insertModeKeyBindings": [
    {
      "before": [ "j", "j" ],
      "after": [ "<Esc>" ]
    }
  ],
  // ---------------------------------------------------------------------------
  "C_Cpp.default.cppStandard": "c++17",
  "C_Cpp.default.intelliSenseMode": "clang-x64",
  // ---------------------------------------------------------------------------
  "eslint.run": "onSave",
  "eslint.validate": [ // Parse .js/.ts/.jsx/tsx
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact"
  ],
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.preferences.quoteStyle": "single",
  "typescript.preferences.quoteStyle": "single",
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  // ---------------------------------------------------------------------------
  "java.errors.incompleteClasspath.severity": "ignore",
  // ---------------------------------------------------------------------------
  "python.linting.enabled": true,
  "python.linting.mypyEnabled": false, // Check types, enabled on project basis
  "python.linting.flake8Enabled": true, // General linting, should always be there
  "python.linting.pylintEnabled": false, // No care
  "python.jediEnabled": false, // No care
  "python.linting.pydocstyleEnabled": false, // Included in flake8
  // ---------------------------------------------------------------------------
  "latex-workshop.view.pdf.viewer": "tab",
  "latex-workshop.message.update.show": false,
  // ---------------------------------------------------------------------------
  "crystal-lang.compiler": "/usr/local/bin/crystal",
  "crystal-lang.completion": true,
  "crystal-lang.hover": true,
  "crystal-lang.implementations": true,
  // ---------------------------------------------------------------------------
  // Server is at false for now as it breaks the autocompletion of
  // not imported packages, fields completion
  "go.useLanguageServer": false,
  "[go]": {
    "editor.snippetSuggestions": "none",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    },
  },
  "go.lintTool": "golangci-lint",
  "go.lintFlags": [
    "-Egolint",
    "-Einterfacer",
    "-Elll",
    "-Eunconvert",
    "-Eunparam",
    "--fast"
  ],
  // Go settings that activate when the language server is disabled
  "go.formatTool": "goimports",
  "go.autocompleteUnimportedPackages": true,
  // ---------------------------------------------------------------------------
  "git.autofetch": true, // Fetch be fore pull
  // ---------------------------------------------------------------------------
  "files.exclude": {
    "**/__pycache__/": true,
    "**/*.pyc": true,
    "**/.mypy_cache/": true,
    "**/.idea/": true,
    "node_modules/": true,
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "files.associations": {
    ".eslintrc": "jsonc",
    "*.prisma": "graphql",
    "*.html": "html"
  },
  "zenMode.fullScreen": false,
  "zenMode.hideStatusBar": false,
  "zenMode.hideLineNumbers": false,
  "window.nativeTabs": true,
  "workbench.editor.showTabs": false,
  "terminal.integrated.fontFamily": "Iosevka Term",
  "terminal.integrated.shell.osx": "/usr/local/bin/fish"
  // ---------------------------------------------------------------------------
}
