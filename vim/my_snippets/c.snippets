## Global python code to get stuff
global !p
import time
import locale
import os
import pwd

locale.setlocale(locale.LC_ALL, 'C');

def getTime():
  return time.strftime("%c")
endglobal

## Epitech header
snippet header "Epitech standard header" b
/*
** `!p snip.rv = snip.fn` for $1 in `!p snip.rv = path`
** 
** Made by `echo $FULLNAME`
** Login   <`echo $EPITECH_LOGIN`>
** 
** Started on  `!p snip.rv = getTime()` `echo $FULLNAME`
** Last update `!p snip.rv = getTime()` `echo $FULLNAME`
*/
endsnippet

## Comments
snippet /* "/* ** ... */" b
/*
** $1
*/
endsnippet

## Typedef on things

snippet s "typedef struct s_..." b
typedef struct	s_$1
{
  $2;
}		t_$1;
endsnippet

snippet e "typedef enum e_..." b
typedef enum	e_$1
{
  $2
}		t_$1;
endsnippet

## Control structures

snippet if "if (...) {...}"
if ($1)
{
  $2;
}
endsnippet

snippet i "if (...) ..."
if ($1)
  $2;
endsnippet

snippet elseif "else if (...) {...}"
else if ($1)
{
  $2;
}
endsnippet

snippet ei "else if (...) ..."
else if ($1)
  $2;
endsnippet

snippet else "else {...}"
else
{
  $1;
}
endsnippet

snippet e "else ..."
else
  $1;
endsnippet

snippet while "while (...) {...}"
while ($1)
{
  $2;
}
endsnippet

snippet w "while (...) ..."
while ($1)
  $2;
endsnippet

## Functions

snippet main "main(...) {...}" b
int	main(${1:int argc, char *const argv})
{
  $2;
  return (0);
}
endsnippet

snippet func "C function" b
$1	$2($3)
{
  $4;
}
endsnippet

## Header stuff

snippet # "#define ..." b
#define $1	$2
endsnippet

snippet #f "#define FUNC(...) (...)"
#define $1()	$2
endsnippet

snippet #p "#pragma once"
#pragma once
endsnippet
